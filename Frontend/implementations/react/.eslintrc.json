{
    "extends": [
        "eslint:recommended",
        "prettier"
    ],
    "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "import"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "sourceType": "module",
        "project": "./tsconfig.json",
        "EXPERIMENTAL_useSourceOfProjectReferenceRedirect": true
    },
    "env": {
        "browser": true,
        "node": true,
        "es6": true
    },
    "rules": {
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "warn",
        "unused-imports/no-unused-vars": [
            "warn",
            {
                "vars": "all",
                "varsIgnorePattern": "^_",
                "args": "after-used",
                "argsIgnorePattern": "^_"
            }
        ],
        "import/order": [
            "warn",
            {
                // グループごとの並び順
                "groups": [
                    "builtin", // 1. fsや path などの node "builtin" のモジュール
                    "external", // 2. npm install したパッケージ
                    "internal", // 3. webpack などでパス設定したモジュール
                    [
                        "parent",
                        "sibling"
                    ], // 4. 親階層と小階層のファイル
                    "object", // object"-imports
                    "type", // 型だけをインポートする type imports
                    "index" // 同階層のファイル
                ],
                // グループごとに改行を入れる
                "newlines-between": "always", // "never" を指定すると改行なし
                // FIXME: ちょっとよく分かってない
                // This defines import types that are not handled by configured pathGroups. This is mostly needed when you want to handle path groups that look like external imports.
                "pathGroupsExcludedImportTypes": [
                    "builtin"
                ],
                // アルファベット順・大文字小文字を区別しない
                "alphabetize": {
                    "order": "asc",
                    "caseInsensitive": true
                },
                // パターンマッチしたものをグループにする
                // "newlines-between": "always" の場合は pathGroups  ごとに空行が入る
                "pathGroups": [
                    // react 関連を external より前にする
                    // "pathGroupsExcludedImportTypes": ["react"], にしてみたが `react`, `react-dom` などが別グループになってしまったので pattern で無理やり同じグループにした
                    {
                        "pattern": "react**",
                        "group": "external",
                        "position": "before"
                    },
                    // `@/app`, `@/features/`, `@/libs` の import をひとグループにして internal の前に
                    {
                        "pattern": "{@/app/**,@/features/**,@/libs/**}",
                        "group": "internal",
                        "position": "before"
                    },
                    // `@/components`, `@/pages` の import をグルーピング
                    {
                        "pattern": "{@/components/**,@/pages/**}",
                        "group": "internal",
                        "position": "before"
                    },
                    // CSS module を一番最後に
                    {
                        "pattern": "./**.module.css",
                        "group": "index",
                        "position": "after"
                    }
                ]
            }
        ]
    },
    "ignorePatterns": [
        "**/*.js"
    ]
}